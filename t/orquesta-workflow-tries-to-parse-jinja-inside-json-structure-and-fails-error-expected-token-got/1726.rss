<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Orquesta workflow tries to parse jinja inside json structure and fails. Error: expected token &#39;:&#39;, got &#39;}&#39;</title>
    <link>https://forum.stackstorm.com/t/orquesta-workflow-tries-to-parse-jinja-inside-json-structure-and-fails-error-expected-token-got/1726</link>
    <description>Hello,

I receive input for my workflow from an API containing JSON content. This JSON content does not contain valid Jinja expressions and I don&#39;t want to parse any Jinja inside. 
Nevertheless it looks like this is the default behaviour. Is there any possibility to not evaluate Jinja inside this JSON?

As example I created the following simplified test wfl for you:
```
version: 1.0

description: Parse error

vars:
  - test_in: {
          &quot;md5&quot;: &quot;93c8469e0ae544e3437a8762e35a48b2&quot;,
          &quot;raw_headers&quot;: &quot;X-Triage-Noise-Reduction: state=0
Subject: [EXT] +{{{{{ McAfee_SECURITY_SERVICE }}}}+
Thread-Topic: [EXT] +{{{{{ McAfee_SECURITY_SERVICE }}}}+
Thread-Index: AQHXU9CCsPPgqyQZN0Ort1HhdcR5dQ==
Date: Fri, 21 May 2021 13:48:06 +0000
...&quot;,
          &quot;subject&quot;: &quot;[EXT] +{{{{{ McAfee_SECURITY_SERVICE }}}}+&quot;,
          &quot;processed_at&quot;: &quot;2021-06-02T15:07:00.739Z&quot;
        }

tasks:
  Testout:
    action: core.echo
    input:
      message: &lt;% ctx().test_in.processed_at %&gt;
```

Already during the parsing of the input value the wfl crashes with following error:
```
{
  &quot;errors&quot;: [
    {
      &quot;expression&quot;: &quot;X-Triage-Noise-Reduction: state=0 Subject: [EXT] +{{{{{ McAfee_SECURITY_SERVICE }}}}+ Thread-Topic: [EXT] +{{{{{ McAfee_SECURITY_SERVICE }}}}+ Thread-Index: AQHXU9CCsPPgqyQZN0Ort1HhdcR5dQ== Date: Fri, 21 May 2021 13:48:06 +0000 ...&quot;,
      &quot;message&quot;: &quot;expected token &#39;:&#39;, got &#39;}&#39;&quot;,
      &quot;spec_path&quot;: &quot;vars&quot;,
      &quot;schema_path&quot;: &quot;properties.vars&quot;,
      &quot;language&quot;: &quot;jinja&quot;,
      &quot;type&quot;: &quot;expression&quot;
    },
    {
      &quot;expression&quot;: &quot;[EXT] +{{{{{ McAfee_SECURITY_SERVICE }}}}+&quot;,
      &quot;message&quot;: &quot;expected token &#39;:&#39;, got &#39;}&#39;&quot;,
      &quot;spec_path&quot;: &quot;vars&quot;,
      &quot;schema_path&quot;: &quot;properties.vars&quot;,
      &quot;language&quot;: &quot;jinja&quot;,
      &quot;type&quot;: &quot;expression&quot;
    }
  ],
  &quot;output&quot;: null
}
```


In my real world example the test_in content is part of a more complex structure and I don&#39;t see any possibility to escape this characters or something like this.

Any idea how to solve this issue are welcome.

Thanks.
Nikolas</description>
    
    <lastBuildDate>Fri, 04 Jun 2021 12:29:41 +0000</lastBuildDate>
    <category>Uncategorized</category>
    <atom:link href="https://forum.stackstorm.com/t/orquesta-workflow-tries-to-parse-jinja-inside-json-structure-and-fails-error-expected-token-got/1726.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Orquesta workflow tries to parse jinja inside json structure and fails. Error: expected token &#39;:&#39;, got &#39;}&#39;</title>
        <dc:creator><![CDATA[wingi]]></dc:creator>
        <description><![CDATA[
            <p>not sure if it is the mismatch or if it already occurs when there are two or more braces. Nevertheless I can not influence the source. It is part of an email analysis workflow and it receives the message subject as it is in the mail given. In this case the subject contains 5 times { and 4 times }. There is no intention to be jinja syntax it is just by coincidence.</p>
          <p><a href="https://forum.stackstorm.com/t/orquesta-workflow-tries-to-parse-jinja-inside-json-structure-and-fails-error-expected-token-got/1726/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.stackstorm.com/t/orquesta-workflow-tries-to-parse-jinja-inside-json-structure-and-fails-error-expected-token-got/1726/3</link>
        <pubDate>Fri, 04 Jun 2021 12:29:41 +0000</pubDate>
        <guid isPermaLink="false">forum.stackstorm.com-post-1726-3</guid>
        <source url="https://forum.stackstorm.com/t/orquesta-workflow-tries-to-parse-jinja-inside-json-structure-and-fails-error-expected-token-got/1726.rss">Orquesta workflow tries to parse jinja inside json structure and fails. Error: expected token &#39;:&#39;, got &#39;}&#39;</source>
      </item>
      <item>
        <title>Orquesta workflow tries to parse jinja inside json structure and fails. Error: expected token &#39;:&#39;, got &#39;}&#39;</title>
        <dc:creator><![CDATA[arms11]]></dc:creator>
        <description><![CDATA[
            <p>Might be unrelated but is it the mismatch between the opening brace (5 times) vs closing are 4?<br>
Is it auto-generated somewhere where you may not have control over how it is built?</p>
<p>We do use webhook trigger based rule where we pass <code>{something}</code> in the json and that does work in the rule processor. However, I could not when I had it <code>{{something}}</code> as it may be taken as jinja syntax!</p>
          <p><a href="https://forum.stackstorm.com/t/orquesta-workflow-tries-to-parse-jinja-inside-json-structure-and-fails-error-expected-token-got/1726/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.stackstorm.com/t/orquesta-workflow-tries-to-parse-jinja-inside-json-structure-and-fails-error-expected-token-got/1726/2</link>
        <pubDate>Fri, 04 Jun 2021 12:07:16 +0000</pubDate>
        <guid isPermaLink="false">forum.stackstorm.com-post-1726-2</guid>
        <source url="https://forum.stackstorm.com/t/orquesta-workflow-tries-to-parse-jinja-inside-json-structure-and-fails-error-expected-token-got/1726.rss">Orquesta workflow tries to parse jinja inside json structure and fails. Error: expected token &#39;:&#39;, got &#39;}&#39;</source>
      </item>
      <item>
        <title>Orquesta workflow tries to parse jinja inside json structure and fails. Error: expected token &#39;:&#39;, got &#39;}&#39;</title>
        <dc:creator><![CDATA[wingi]]></dc:creator>
        <description><![CDATA[
            <p>Hello,</p>
<p>I receive input for my workflow from an API containing JSON content. This JSON content does not contain valid Jinja expressions and I don’t want to parse any Jinja inside.<br>
Nevertheless it looks like this is the default behaviour. Is there any possibility to not evaluate Jinja inside this JSON?</p>
<p>As example I created the following simplified test wfl for you:</p>
<pre><code class="lang-auto">version: 1.0

description: Parse error

vars:
  - test_in: {
          "md5": "93c8469e0ae544e3437a8762e35a48b2",
          "raw_headers": "X-Triage-Noise-Reduction: state=0
Subject: [EXT] +{{{{{ McAfee_SECURITY_SERVICE }}}}+
Thread-Topic: [EXT] +{{{{{ McAfee_SECURITY_SERVICE }}}}+
Thread-Index: AQHXU9CCsPPgqyQZN0Ort1HhdcR5dQ==
Date: Fri, 21 May 2021 13:48:06 +0000
...",
          "subject": "[EXT] +{{{{{ McAfee_SECURITY_SERVICE }}}}+",
          "processed_at": "2021-06-02T15:07:00.739Z"
        }

tasks:
  Testout:
    action: core.echo
    input:
      message: &lt;% ctx().test_in.processed_at %&gt;
</code></pre>
<p>Already during the parsing of the input value the wfl crashes with following error:</p>
<pre><code class="lang-auto">{
  "errors": [
    {
      "expression": "X-Triage-Noise-Reduction: state=0 Subject: [EXT] +{{{{{ McAfee_SECURITY_SERVICE }}}}+ Thread-Topic: [EXT] +{{{{{ McAfee_SECURITY_SERVICE }}}}+ Thread-Index: AQHXU9CCsPPgqyQZN0Ort1HhdcR5dQ== Date: Fri, 21 May 2021 13:48:06 +0000 ...",
      "message": "expected token ':', got '}'",
      "spec_path": "vars",
      "schema_path": "properties.vars",
      "language": "jinja",
      "type": "expression"
    },
    {
      "expression": "[EXT] +{{{{{ McAfee_SECURITY_SERVICE }}}}+",
      "message": "expected token ':', got '}'",
      "spec_path": "vars",
      "schema_path": "properties.vars",
      "language": "jinja",
      "type": "expression"
    }
  ],
  "output": null
}
</code></pre>
<p>In my real world example the test_in content is part of a more complex structure and I don’t see any possibility to escape this characters or something like this.</p>
<p>Any idea how to solve this issue are welcome.</p>
<p>Thanks.<br>
Nikolas</p>
          <p><a href="https://forum.stackstorm.com/t/orquesta-workflow-tries-to-parse-jinja-inside-json-structure-and-fails-error-expected-token-got/1726/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.stackstorm.com/t/orquesta-workflow-tries-to-parse-jinja-inside-json-structure-and-fails-error-expected-token-got/1726/1</link>
        <pubDate>Fri, 04 Jun 2021 09:26:21 +0000</pubDate>
        <guid isPermaLink="false">forum.stackstorm.com-post-1726-1</guid>
        <source url="https://forum.stackstorm.com/t/orquesta-workflow-tries-to-parse-jinja-inside-json-structure-and-fails-error-expected-token-got/1726.rss">Orquesta workflow tries to parse jinja inside json structure and fails. Error: expected token &#39;:&#39;, got &#39;}&#39;</source>
      </item>
  </channel>
</rss>
