<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Sending large HTTP POST inside run() with requests package</title>
    <link>https://forum.stackstorm.com/t/sending-large-http-post-inside-run-with-requests-package/1758</link>
    <description>Question about sending http post with large body via run() and using requests versus core.http. We noted that it fails using the run method with http requests and it works with the core.http. By failure i mean it runs and we see defunct processes eventually. We jacked the action timeout way up..but it never returns from run. Can someone explain why these 2 methods behave differently and when one should use the core.http versus run with requests. When i say large the body is about 2K lines of JSON.</description>
    
    <lastBuildDate>Fri, 09 Jul 2021 16:26:13 +0000</lastBuildDate>
    <category>Platform</category>
    <atom:link href="https://forum.stackstorm.com/t/sending-large-http-post-inside-run-with-requests-package/1758.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Sending large HTTP POST inside run() with requests package</title>
        <dc:creator><![CDATA[devdude]]></dc:creator>
        <description><![CDATA[
            <p>ST2 3.5 fix???</p>
<aside class="onebox githubpullrequest" data-onebox-src="https://github.com/StackStorm/st2/pull/5220">
  <header class="source">

      <a href="https://github.com/StackStorm/st2/pull/5220" target="_blank" rel="noopener nofollow ugc">github.com/StackStorm/st2</a>
  </header>

  <article class="onebox-body">
    <div class="github-row">
  <div class="github-icon-container" title="Pull Request">
    <svg width="60" height="60" class="github-icon" viewBox="0 0 12 16" aria-hidden="true"><path d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg>
  </div>

  <div class="github-info-container">
    <h4>
      <a href="https://github.com/StackStorm/st2/pull/5220" target="_blank" rel="noopener nofollow ugc">Fix subprocess handling when killed on timeout</a>
    </h4>

    <div class="branches">
      <code>StackStorm:master</code> ← <code>r0m4n-z:fix_zombie_spawning_green_shell</code>
    </div>

    <div class="github-info">
      <div class="date">
        opened <span class="discourse-local-date" data-format="ll" data-date="2021-04-03" data-time="23:20:07" data-timezone="UTC">11:20PM - 03 Apr 21 UTC</span>
      </div>

      <div class="user">
        <a href="https://github.com/r0m4n-z" target="_blank" rel="noopener nofollow ugc">
          <img alt="r0m4n-z" src="https://aws1.discourse-cdn.com/standard10/uploads/stackstorm/original/1X/8cd512e9145d7e6847abc7b019f2592c58dce799.jpeg" class="onebox-avatar-inline" width="20" height="20">
          r0m4n-z
        </a>
      </div>

      <div class="lines" title="22 commits changed 12 files with 392 additions and 10 deletions">
        <a href="https://github.com/StackStorm/st2/pull/5220/files" target="_blank" rel="noopener nofollow ugc">
          <span class="added">+392</span>
          <span class="removed">-10</span>
        </a>
      </div>
    </div>
  </div>
</div>

  <div class="github-row">
    <p class="github-body-container">**Problem:**
Running ST2 actions as subprocesses (`eventlet.green`) spawns zomb<span class="show-more-container"><a href="https://github.com/StackStorm/st2/pull/5220" target="_blank" rel="noopener nofollow ugc" class="show-more">…</a></span><span class="excerpt hidden">ies on timeout.

**Reproduce:**
1. Spawn process which execution is going to take more than command's timeout.
2. `process.kill()` will be called.
3. Spawned process becomes zombie.

Method `process.kill()` is never handled as well as `process.communicate()`, which calls `process.wait()` - all those methods check `process.returncode` against None and if `returncode` already set, it just will be returned.

Why do I suggest to remove line 170: it doesn't seem to be necessary to set returncode here to avoid race condition for some `kill_func`. Probably additional custom attribute could be used here on `process` to provide that information if it's really necessary, but I don't think ST2 should do that.</span></p>
  </div>

  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

          <p><a href="https://forum.stackstorm.com/t/sending-large-http-post-inside-run-with-requests-package/1758/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.stackstorm.com/t/sending-large-http-post-inside-run-with-requests-package/1758/2</link>
        <pubDate>Fri, 09 Jul 2021 16:26:13 +0000</pubDate>
        <guid isPermaLink="false">forum.stackstorm.com-post-1758-2</guid>
        <source url="https://forum.stackstorm.com/t/sending-large-http-post-inside-run-with-requests-package/1758.rss">Sending large HTTP POST inside run() with requests package</source>
      </item>
      <item>
        <title>Sending large HTTP POST inside run() with requests package</title>
        <dc:creator><![CDATA[techdiverdown]]></dc:creator>
        <description><![CDATA[
            <p>Question about sending http post with large body via run() and using requests versus core.http. We noted that it fails using the run method with http requests and it works with the core.http. By failure i mean it runs and we see defunct processes eventually. We jacked the action timeout way up…but it never returns from run. Can someone explain why these 2 methods behave differently and when one should use the core.http versus run with requests. When i say large the body is about 2K lines of JSON.</p>
          <p><a href="https://forum.stackstorm.com/t/sending-large-http-post-inside-run-with-requests-package/1758/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.stackstorm.com/t/sending-large-http-post-inside-run-with-requests-package/1758/1</link>
        <pubDate>Thu, 01 Jul 2021 16:55:02 +0000</pubDate>
        <guid isPermaLink="false">forum.stackstorm.com-post-1758-1</guid>
        <source url="https://forum.stackstorm.com/t/sending-large-http-post-inside-run-with-requests-package/1758.rss">Sending large HTTP POST inside run() with requests package</source>
      </item>
  </channel>
</rss>
