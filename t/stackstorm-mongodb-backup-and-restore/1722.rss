<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Stackstorm - mongodb backup and restore</title>
    <link>https://forum.stackstorm.com/t/stackstorm-mongodb-backup-and-restore/1722</link>
    <description>Hello,

How does people Backup and restore of mongodb, in case of failures, on HA K8s cluster or docker environments in StackStorm? 
It would be great if you can share any use cases you guys came across.</description>
    
    <lastBuildDate>Mon, 31 May 2021 10:26:53 +0000</lastBuildDate>
    <category>Platform</category>
    <atom:link href="https://forum.stackstorm.com/t/stackstorm-mongodb-backup-and-restore/1722.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Stackstorm - mongodb backup and restore</title>
        <dc:creator><![CDATA[Moondream]]></dc:creator>
        <description><![CDATA[
            <p>Stack Storm depends on Open Source MongoDB helm chart developed by Bitnami, You can see that in Chart.yaml file.</p>
<ul>
<li>name: mongodb<br>
version: 10.0.1<br>
repository: <a href="https://charts.bitnami.com/bitnami" rel="noopener nofollow ugc">https://charts.bitnami.com/bitnami</a><br>
condition: mongodb.enabled</li>
</ul>
<p><a href="https://raw.githubusercontent.com/StackStorm/stackstorm-ha/master/Chart.yaml" class="onebox" target="_blank" rel="noopener nofollow ugc">https://raw.githubusercontent.com/StackStorm/stackstorm-ha/master/Chart.yaml</a><br>
So , You can independently look for Backup and Restore  used for Bitnami Mongo DB helm chart.</p>
<p>Option - 1:- You can see Bitnami Mongo DB helm chart documentation and create a controller object in kubernetes which will take backup and upload in Object storage [AWS S3 ]</p>
<p>You can also create a API Endpoint inside controller which will initiate restore process when required.</p>
<p>You can go through Bitnami Mongo DB documentation on Backup &amp; Restore<br>
&amp; Create <a href="https://docs.bitnami.com/tutorials/backup-restore-data-mongodb-kubernetes/" class="inline-onebox" rel="noopener nofollow ugc">Backup and Restore MongoDB Deployments on Kubernetes</a></p>
<p>Option - 2:- Since Mongo Replica Set instances are supported by PV [Persistent volume ] , You could use <a href="https://velero.io/" rel="noopener nofollow ugc">https://velero.io/</a> ,<br>
This option becomes complex because you will be basically cloning the full volume when taking backup.<br>
However if Storage provider [onPrem storage / Cloud storage ] supports linked clone it will not consume much of space.</p>
          <p><a href="https://forum.stackstorm.com/t/stackstorm-mongodb-backup-and-restore/1722/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.stackstorm.com/t/stackstorm-mongodb-backup-and-restore/1722/2</link>
        <pubDate>Mon, 31 May 2021 10:24:50 +0000</pubDate>
        <guid isPermaLink="false">forum.stackstorm.com-post-1722-2</guid>
        <source url="https://forum.stackstorm.com/t/stackstorm-mongodb-backup-and-restore/1722.rss">Stackstorm - mongodb backup and restore</source>
      </item>
      <item>
        <title>Stackstorm - mongodb backup and restore</title>
        <dc:creator><![CDATA[mohan28]]></dc:creator>
        <description><![CDATA[
            <p>Hello,</p>
<p>How does people Backup and restore of mongodb, in case of failures, on HA K8s cluster or docker environments in StackStorm?<br>
It would be great if you can share any use cases you guys came across.</p>
          <p><a href="https://forum.stackstorm.com/t/stackstorm-mongodb-backup-and-restore/1722/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.stackstorm.com/t/stackstorm-mongodb-backup-and-restore/1722/1</link>
        <pubDate>Mon, 31 May 2021 08:00:14 +0000</pubDate>
        <guid isPermaLink="false">forum.stackstorm.com-post-1722-1</guid>
        <source url="https://forum.stackstorm.com/t/stackstorm-mongodb-backup-and-restore/1722.rss">Stackstorm - mongodb backup and restore</source>
      </item>
  </channel>
</rss>
